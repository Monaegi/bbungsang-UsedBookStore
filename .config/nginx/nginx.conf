##
# user root;
# nginx는 마스터 프로세스와 워커 프로세스로 동작하고,
# 웹서버의 역할을 수행하는데 user 지시어는 워커 프로세스의 권한을 지정한다.
# user 값이 root로 되어 있다면 워커 프로세스를 root의 권한으로 동작하게 되고,
# 워커 프로세스를 악의적 사용자가 제어하게 되면 이 머신을 루트 권한으로 원격 제어하게 되는 셈이기 때문에 보안상 위험하다.
# 해당 계정은 일반 유저의 권한으로 쉘에 접속할 수 없어야 안전하다.
##

user www-data;
# www-data는 오직 nginx를 구동하는데만 사용할 수 있게 된다.

# nginx 프로세스 실행 가능 수 실질적인 웹 서버 역할
worker_processes auto;

# nginx 마스터 프로세스 ID 정보가 저장
pid /run/nginx.pid;

# 가상 호스트 설정이나 반복되는 옵션 항목을 `include`를 통해 불러올 수 있다.
include /etc/nginx/modules-enabled/*.conf;

# supervisor는 항상 forward 로 service 한다.
# supervisor로 관리하기 위해 nginx 본래 daemon 으로 빠지는 성질(backward service)을 off 시킴
daemon off;

# Nginx는 비동기 이벤드 방식의 처리 방식을 가지고 있는데 event block은 그 처리에 관련된 옵션을 설정하는 곳이다.
events {
    # work_processes와 같은 지시자 설정 파일 최상단에 위치하면서 nginx의 기본적인 동작 방식을 정의한다.
    # 몇 개의 접속을 동시에 처리할 것인가를 지정하는 값, 최대 접속자 수 = worker_processes * worker_connections
	worker_connections 768;
}

# 웹 서버에 대한 동작 설정
http {
	##
	# Basic Settings
	##
    sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

    # 접속시 커넥션을 몇 초동안 유지할지에 대한 설정값
    # 이 값이 높으면 불필요한 커넥션을 유지하기 때문에 낮은값 혹은 0을 권장한다(default=75)
	keepalive_timeout 20;

    types_hash_max_size 2048;

    # 헤더에 Nginx 버전을 숨기는 역할 보안상 설정할 것을 권장
    server_tokens off;

    # 호스트의 도메인 이름에 대한 공간을 설정하는 것
    # 도메인 이름이 길 경우 bucket 공간이 모자라 에러가 발생할 수 있으므로 넉넉하게 설정할 것을 권장한다.
    server_names_hash_bucket_size 250;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;
    log_not_found off;

	##
	# Gzip Settings
	##
	gzip on;
	gzip_disable "msie6";

	##
	# Virtual Host Configs
	##
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}